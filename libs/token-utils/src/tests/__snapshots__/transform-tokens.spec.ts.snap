// Bun Snapshot v1, https://goo.gl/fbAQLP

exports[`token group 1`] = `
":host {
    --line-height-xxs: 0.0125rem;
    --line-height-xs: 0.025rem;
    --line-height-sm: 0.0375rem;
    --line-height-md: 0.05rem;
    --line-height-ml: 0.0625rem;
    --line-height-lg: 0.075rem;
    --line-height-xl: 0.1rem;
    --line-height-xxl: 0.15rem;
    --line-height-xxxl: 0.175rem;
}"
`;

exports[`token group 2`] = `
"export const lineHeightXxs = 'var(--line-height-xxs)'
export const lineHeightXs = 'var(--line-height-xs)'
export const lineHeightSm = 'var(--line-height-sm)'
export const lineHeightMd = 'var(--line-height-md)'
export const lineHeightMl = 'var(--line-height-ml)'
export const lineHeightLg = 'var(--line-height-lg)'
export const lineHeightXl = 'var(--line-height-xl)'
export const lineHeightXxl = 'var(--line-height-xxl)'
export const lineHeightXxxl = 'var(--line-height-xxxl)'
"
`;

exports[`nested token group 1`] = `
":host {
    --colors-gray-10: oklch(97.91% 0 0 / none);
}"
`;

exports[`nested token group 2`] = `
"export const colorsGray10 = 'var(--colors-gray-10)'
"
`;

exports[`context: [media-query] 1`] = `
":host {
    --size-dynamic-100: 0.15rem;
}

@media screen and (min-width: 1024px) {
    :host {
        --size-dynamic-100: 0.15rem;
    }
}

:host([data-media-query="desktop"]) {
    --size-dynamic-100: 0.15rem;
}

@media screen and (min-width: 1920px) {
    :host {
        --size-dynamic-100: 0.2rem;
    }
}

:host([data-media-query="tv"]) {
    --size-dynamic-100: 0.2rem;
}

@media screen and (max-width: 767px) {
    :host {
        --size-dynamic-100: 0.1rem;
    }
}

:host([data-media-query="mobile"]) {
    --size-dynamic-100: 0.1rem;
}"
`;

exports[`context: [media-query] 2`] = `
"export const sizeDynamic100 = 'var(--size-dynamic-100)'
"
`;

exports[`context: [color-scheme] 1`] = `
":host {
    --colors-background-primary: oklch(100% 0 0 / 0.5);
}

@media (prefers-color-scheme:light) {
    :host {
        --colors-background-primary: oklch(100% 0 0 / 0.5);
    }
}

:host([data-color-scheme="light"]) {
    --colors-background-primary: oklch(100% 0 0 / 0.5);
}

@media (prefers-color-scheme:dark) {
    :host {
        --colors-background-primary: oklch(0% 0 0 / 0.5);
    }
}

:host([data-color-scheme="dark"]) {
    --colors-background-primary: oklch(0% 0 0 / 0.5);
}"
`;

exports[`context: [color-scheme] 2`] = `
"export const colorsBackgroundPrimary = 'var(--colors-background-primary)'
"
`;

exports[`context: [media-query, color-scheme] 1`] = `
"@media screen and (min-width: 1920px) {
    :host {
        --size-dynamic-100: 0.2rem;
    }
}

:host([data-media-query="tv"]) {
    --size-dynamic-100: 0.2rem;
}

@media screen and (max-width: 767px) {
    :host {
        --size-dynamic-100: 0.1rem;
    }
}

:host([data-media-query="mobile"]) {
    --size-dynamic-100: 0.1rem;
}

:host {
    --size-dynamic-100: 0.15rem;
    --colors-background-primary: oklch(100% 0 0 / 0.5);
}

@media screen and (min-width: 1024px) {
    :host {
        --size-dynamic-100: 0.15rem;
    }
}

:host([data-media-query="desktop"]) {
    --size-dynamic-100: 0.15rem;
}

@media (prefers-color-scheme:light) {
    :host {
        --colors-background-primary: oklch(100% 0 0 / 0.5);
    }
}

:host([data-color-scheme="light"]) {
    --colors-background-primary: oklch(100% 0 0 / 0.5);
}

@media (prefers-color-scheme:dark) {
    :host {
        --colors-background-primary: oklch(0% 0 0 / 0.5);
    }
}

:host([data-color-scheme="dark"]) {
    --colors-background-primary: oklch(0% 0 0 / 0.5);
}"
`;

exports[`context: [media-query, color-scheme] 2`] = `
"export const sizeDynamic100 = 'var(--size-dynamic-100)'
export const colorsBackgroundPrimary = 'var(--colors-background-primary)'
"
`;

exports[`alias 1`] = `
":host {
    --colors-gray-100: oklch(98.21% 0 0 / none);
}"
`;

exports[`alias 2`] = `
"export const colorsGray100 = 'var(--colors-gray-100)'
export const surfaceSecondary100 = colorsGray100
"
`;

exports[`alias + context 1`] = `
":host {
    --colors-white-100: oklch(97.91% 0 0 / none);
    --colors-charcoal-100: oklch(18.31% 0.004 285.99 / none);
    --surface-secondary-100: var(--colors-white-100);
    --surface-secondary-100: var(--colors-charcoal-100);
}"
`;

exports[`alias + context 2`] = `
"export const colorsWhite100 = 'var(--colors-white-100)'
export const colorsCharcoal100 = 'var(--colors-charcoal-100)'
export const surfaceSecondary100 = 'var(--surface-secondary-100)'
"
`;

exports[`exercise token types 1`] = `
":host {
    --font-weight: 700;
    --letter-spacing: normal;
    --border: 0.05rem solid oklch(0% 0 0 / none);
    --drop-shadow: 4 4 oklch(0% 0 0 / 0.5);
    --gradient: linear-gradient(45deg,oklch(0% 0 0 / 0.5) 20%,oklch(100% 0 0 / 0.5) 80%);
    --font-family: Roboto,sans-serif;
    --transition: 0.3s 0s ease-in-out;
    --transition-cubic: 0.3s 0s cubic-bezier(0.25 0.1 0.25 1);
    --gap: 0.5rem;
    --gap-percent: 10%;
    --grid-template: "a a a" "b c c" "b c c";
    --grid-template-columns: 3rem 3rem;
    --font-size: 0.7rem;
    --line-height: 1;
    --primitive-string: primitive string;
    --primitive-number: 50;
}"
`;

exports[`exercise token types 2`] = `
"export const fontWeight = 'var(--font-weight)'
export const letterSpacing = 'var(--letter-spacing)'
export const border = 'var(--border)'
export const dropShadow = 'var(--drop-shadow)'
export const gradient = 'var(--gradient)'
export const fontFamily = 'var(--font-family)'
export const transition = 'var(--transition)'
export const transitionCubic = 'var(--transition-cubic)'
export const gap = 'var(--gap)'
export const gapPercent = 'var(--gap-percent)'
export const gridTemplate = 'var(--grid-template)'
export const gridTemplateColumns = 'var(--grid-template-columns)'
export const fontSize = 'var(--font-size)'
export const lineHeight = 'var(--line-height)'
export const typography = {
  fontFamily: fontFamily,
  fontSize: fontSize,
  fontWeight: fontWeight,
  letterSpacing: letterSpacing,
  lineHeight: lineHeight,
}
export const flex = {
  display: ,
  columnGap: gap,
}
export const grid = {
  display: ,
  columnGap: gap,
  rowGap: gapPercent,
}
export const primitiveString = 'var(--primitive-string)'
export const primitiveNumber = 'var(--primitive-number)'
"
`;
