// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`workshop: reload false 1`] = `
"import { test, expect } from '@playwright/test'
import AxeBuilder from '@axe-core/playwright'
import { playStory } from '../src/tests/__mocks__/get-story-valid/example.stories.js'
 
test.beforeEach(async ({ page }) => {
  await page.goto('http://localhost:3000/example-stories--play-story')
});
test('Accessibility check Example/Stories: playStory story', async ({ page }) => {
  const results = await new AxeBuilder({ page }).options({}).include('#root').analyze();
  expect(results.violations).toHaveLength(0);
})
test('Renders Example/Stories: playStory story', async ({ page }) => {
  expect(await page.screenshot()).toMatchSnapshot('example-stories--play-story.png');
});
test('Interaction Example/Stories: playStory story', async ({ page }) => {
    playStory.play && await playStory.play(page, expect)
});"
`;

exports[`workshop: reload false 2`] = `
"import { test, expect } from '@playwright/test'
import AxeBuilder from '@axe-core/playwright'
 
test.beforeEach(async ({ page }) => {
  await page.goto('http://localhost:3000/example-stories--regular-story')
});
test('Accessibility check Example/Stories: regularStory story', async ({ page }) => {
  const results = await new AxeBuilder({ page }).options({}).include('#root').analyze();
  expect(results.violations).toHaveLength(0);
})
test('Renders Example/Stories: regularStory story', async ({ page }) => {
  expect(await page.screenshot()).toMatchSnapshot('example-stories--regular-story.png');
});"
`;

exports[`workshop: reload false 3`] = `
"import { test, expect } from '@playwright/test'
import AxeBuilder from '@axe-core/playwright'
import { playStory } from '../../src/tests/__mocks__/get-story-valid/nested/example.stories.js'
 
test.beforeEach(async ({ page }) => {
  await page.goto('http://localhost:3000/example-nested-stories--play-story')
});
test('Accessibility check Example/NestedStories: playStory story', async ({ page }) => {
  const results = await new AxeBuilder({ page }).options({}).include('#root').analyze();
  expect(results.violations).toHaveLength(0);
})
test('Renders Example/NestedStories: playStory story', async ({ page }) => {
  expect(await page.screenshot()).toMatchSnapshot('example-nested-stories--play-story.png');
});
test('Interaction Example/NestedStories: playStory story', async ({ page }) => {
    playStory.play && await playStory.play(page, expect)
});"
`;

exports[`workshop: reload false 4`] = `
"import { test, expect } from '@playwright/test'
import AxeBuilder from '@axe-core/playwright'
 
test.beforeEach(async ({ page }) => {
  await page.goto('http://localhost:3000/example-nested-stories--regular-story')
});
test('Accessibility check Example/NestedStories: regularStory story', async ({ page }) => {
  const results = await new AxeBuilder({ page }).options({}).include('#root').analyze();
  expect(results.violations).toHaveLength(0);
})
test('Renders Example/NestedStories: regularStory story', async ({ page }) => {
  expect(await page.screenshot()).toMatchSnapshot('example-nested-stories--regular-story.png');
});"
`;

exports[`workshop: reload false 5`] = `
Map {
  "example-stories--play-story" => {
    "name": "playStory",
    "srcPath": "/home/edward/Workspace/plaited/libs/workshop/src/tests/__mocks__/get-story-valid/example.stories.tsx",
    "testPath": "/home/edward/Workspace/plaited/libs/workshop/.playwright/example-stories--play-story.spec.ts",
    "title": "Example/Stories",
    "url": "http://localhost:3000/example-stories--play-story",
  },
  "example-stories--regular-story" => {
    "name": "regularStory",
    "srcPath": "/home/edward/Workspace/plaited/libs/workshop/src/tests/__mocks__/get-story-valid/example.stories.tsx",
    "testPath": "/home/edward/Workspace/plaited/libs/workshop/.playwright/example-stories--regular-story.spec.ts",
    "title": "Example/Stories",
    "url": "http://localhost:3000/example-stories--regular-story",
  },
  "example-nested-stories--play-story" => {
    "name": "playStory",
    "srcPath": "/home/edward/Workspace/plaited/libs/workshop/src/tests/__mocks__/get-story-valid/nested/example.stories.tsx",
    "testPath": "/home/edward/Workspace/plaited/libs/workshop/.playwright/nested/example-nested-stories--play-story.spec.ts",
    "title": "Example/NestedStories",
    "url": "http://localhost:3000/example-nested-stories--play-story",
  },
  "example-nested-stories--regular-story" => {
    "name": "regularStory",
    "srcPath": "/home/edward/Workspace/plaited/libs/workshop/src/tests/__mocks__/get-story-valid/nested/example.stories.tsx",
    "testPath": "/home/edward/Workspace/plaited/libs/workshop/.playwright/nested/example-nested-stories--regular-story.spec.ts",
    "title": "Example/NestedStories",
    "url": "http://localhost:3000/example-nested-stories--regular-story",
  },
}
`;

exports[`workshop: reload true 1`] = `
"import { test, expect } from '@playwright/test'
import AxeBuilder from '@axe-core/playwright'
import { playStory } from '../src/tests/__mocks__/get-story-valid/example.stories.js'
 
test.beforeEach(async ({ page }) => {
  await page.goto('http://localhost:3000/example-stories--play-story')
});
test('Accessibility check Example/Stories: playStory story', async ({ page }) => {
  const results = await new AxeBuilder({ page }).options({}).include('#root').analyze();
  expect(results.violations).toHaveLength(0);
})
test('Renders Example/Stories: playStory story', async ({ page }) => {
  expect(await page.screenshot()).toMatchSnapshot('example-stories--play-story.png');
});
test('Interaction Example/Stories: playStory story', async ({ page }) => {
    playStory.play && await playStory.play(page, expect)
});"
`;

exports[`workshop: reload true 2`] = `
"import { test, expect } from '@playwright/test'
import AxeBuilder from '@axe-core/playwright'
 
test.beforeEach(async ({ page }) => {
  await page.goto('http://localhost:3000/example-stories--regular-story')
});
test('Accessibility check Example/Stories: regularStory story', async ({ page }) => {
  const results = await new AxeBuilder({ page }).options({}).include('#root').analyze();
  expect(results.violations).toHaveLength(0);
})
test('Renders Example/Stories: regularStory story', async ({ page }) => {
  expect(await page.screenshot()).toMatchSnapshot('example-stories--regular-story.png');
});"
`;

exports[`workshop: reload true 3`] = `
"import { test, expect } from '@playwright/test'
import AxeBuilder from '@axe-core/playwright'
import { playStory } from '../../src/tests/__mocks__/get-story-valid/nested/example.stories.js'
 
test.beforeEach(async ({ page }) => {
  await page.goto('http://localhost:3000/example-nested-stories--play-story')
});
test('Accessibility check Example/NestedStories: playStory story', async ({ page }) => {
  const results = await new AxeBuilder({ page }).options({}).include('#root').analyze();
  expect(results.violations).toHaveLength(0);
})
test('Renders Example/NestedStories: playStory story', async ({ page }) => {
  expect(await page.screenshot()).toMatchSnapshot('example-nested-stories--play-story.png');
});
test('Interaction Example/NestedStories: playStory story', async ({ page }) => {
    playStory.play && await playStory.play(page, expect)
});"
`;

exports[`workshop: reload true 4`] = `
"import { test, expect } from '@playwright/test'
import AxeBuilder from '@axe-core/playwright'
 
test.beforeEach(async ({ page }) => {
  await page.goto('http://localhost:3000/example-nested-stories--regular-story')
});
test('Accessibility check Example/NestedStories: regularStory story', async ({ page }) => {
  const results = await new AxeBuilder({ page }).options({}).include('#root').analyze();
  expect(results.violations).toHaveLength(0);
})
test('Renders Example/NestedStories: regularStory story', async ({ page }) => {
  expect(await page.screenshot()).toMatchSnapshot('example-nested-stories--regular-story.png');
});"
`;

exports[`workshop: reload true 5`] = `
"import { test, expect } from '@playwright/test'
import AxeBuilder from '@axe-core/playwright'
 
test.beforeEach(async ({ page }) => {
  await page.goto('http://localhost:3000/example-stories--reload-story')
});
test('Accessibility check Example/Stories: reloadStory story', async ({ page }) => {
  const results = await new AxeBuilder({ page }).options({}).include('#root').analyze();
  expect(results.violations).toHaveLength(0);
})
test('Renders Example/Stories: reloadStory story', async ({ page }) => {
  expect(await page.screenshot()).toMatchSnapshot('example-stories--reload-story.png');
});"
`;
